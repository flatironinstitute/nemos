[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "nemos"
dynamic = ["version"]
authors = [{name = "nemos authors"}]
description = "NEural MOdelS, a statistical modeling framework for neuroscience."
readme = "README.md"
requires-python = ">=3.10"
keywords = ["neuroscience", "Poisson-GLM"]
license = { file = "LICENSE" }
classifiers = [
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

# Define dependencies for the project
dependencies = [
    "jax>=0.4.28",                     # Numerical computing library
    "jaxopt>=0.6",                  # Optimization library built on JAX
    "numpy>1.20",                   # Numerical computing library
    "scipy>=1.10",                  # Scientific computing library
    "typing_extensions>=4.6",       # Typing extensions for Python
    "pynapple>=0.6.6",
]



# Configure package discovery for setuptools
[tool.setuptools.packages.find]
where = ["src"]     # The directory where package modules are located
include = ["nemos"] # The specific package(s) to include in the distribution

[tool.setuptools_scm]
version_scheme = 'python-simplified-semver'
local_scheme = 'no-local-version'

# Define optional dependencies for the project
[project.optional-dependencies]
dev = [
    "black",                        # Code formatter
    "isort",                        # Import sorter
    "pip-tools",                    # Dependency management
    "pytest",                       # Testing framework
    "pytest-xdist",                 # Parallelize pytest
    "flake8",                       # Code linter
    "coverage",                     # Test coverage measurement
    "pytest-cov",                   # Test coverage plugin for pytest
    "statsmodels",                  # Used to compare model pseudo-r2 in testing
    "scikit-learn",                 # Testing compatibility with CV & pipelines
    "matplotlib>=3.7",              # Needed by doctest to run docstrings examples
    "pooch",                        # Required by doctest for fetch module
    "dandi",                        # Required by doctest for fetch module
    "seaborn",                      # Required by doctest for _documentation_utils module
    "myst-nb",                      # Test myst_nb utils for glue
]
docs = [
    "numpydoc",
    "sphinx",
    "pydata-sphinx-theme",
    "sphinx-autodoc-typehints",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-issues",
    "sphinxcontrib-apidoc",
    "sphinx-togglebutton",
    "sphinx_code_tabs",
    "sphinxemoji",
    "myst-parser",
    "myst-nb",
    "dandi",
    "sphinx-autobuild",
    "sphinx-contributors",
    "scikit-learn",
    "dandi",
    "matplotlib>=3.7",
    "seaborn",
    "pooch",
    "ipywidgets",
    "ipykernel",
    "patsy",
]
examples = [
    "scikit-learn",
    "dandi",
    "matplotlib>=3.7",
    "seaborn",
    "pooch",
    "fsspec",
    "patsy",
]


[tool.black]
target-version = ['py310', 'py311', 'py312']
skip-string-normalization = false
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.md
    | \.toml
    | \.cfg
    | \.txt
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | examples))'''

# Configure isort
[tool.isort]
multi_line_output = 3             # Use three-line style for multi-line imports
include_trailing_comma = true     # Include trailing comma in multi-line imports
profile = "black"

# Configure pytest
[tool.pytest.ini_options]
testpaths = ["tests"]             # Specify the directory where test files are located
filterwarnings = [
    # note the use of single quote below to denote "raw" strings in TOML
    # this is raised whenever one imports the plotting utils
    'ignore:plotting functions contained within:UserWarning',
    # numerical inversion test reaches tolerance...
    'ignore:Tolerance of -?\d\.\d+e-\d\d reached:RuntimeWarning',
    # mpl must be non-interctive for testing otherwise doctests will freeze
    'ignore:FigureCanvasAgg is non-interactive, and thus cannot be shown:UserWarning',
]

[tool.coverage.run]
omit = [
    "src/nemos/fetch/*",
    "src/nemos/_documentation_utils/*",
]

[tool.coverage.report]
exclude_lines = [
    "@abc.abstractmethod",
    "if __name__ == .__main__.:"
]
