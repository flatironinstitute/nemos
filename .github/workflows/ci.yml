name: ci

on:
   workflow_dispatch:
   schedule:
     - cron: 0 0 1 * 0     # monthly
   pull_request:
     branches:
       - main
       - development
     types:
       - opened
       - reopened
       - synchronize
       - ready_for_review
   push:
     branches:
       - main

jobs:
  tox_tests:
    if: ${{ !github.event.pull_request.draft }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4 # Use v4 for compatibility with pyproject.toml
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run tox
        run: tox -e py

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  tox_check:
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4 # Use v4 for compatibility with pyproject.toml
        with:
          python-version: 3.12
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run tox
        run: tox -e check

  prevent_docs_absolute_links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make .sh executable
        run: chmod +x bash_scripts/prevent_absolute_links_to_docs.sh

      - name: Check links
        run: ./bash_scripts/prevent_absolute_links_to_docs.sh

  check-links:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Install markdown-link-check
          run: npm install -g markdown-link-check

        - name: Make .sh executable
          run: chmod +x bash_scripts/check_markdown_links.sh

        - name: Check links in root Markdown files
          run: ./bash_scripts/check_markdown_links.sh

  check:
    if: ${{ !github.event.pull_request.draft }}
    needs:
      - tox_tests
      - prevent_docs_absolute_links
      - tox_check
      - check-links
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether all tests and notebooks succeeded
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
